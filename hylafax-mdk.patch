diff -Naur -X /jg/lib/dontdiff hylafax-4.1beta3/faxd/Class1Send.c++ hylafax-4.1beta3.fixed/faxd/Class1Send.c++
--- hylafax-4.1beta3/faxd/Class1Send.c++	Fri Sep  8 16:21:36 2000
+++ hylafax-4.1beta3.fixed/faxd/Class1Send.c++	Mon Jul  9 18:38:51 2001
@@ -753,7 +753,11 @@
         /*
          * correct broken Phase C (T.4) data if neccessary 
          */
-        correctPhaseCData(dp, &totdata, fillorder, params);
+	{
+	u_long jg = totdata;
+        correctPhaseCData(dp, &jg, fillorder, params);
+	totdata = jg;
+	}
 
 	/*
 	 * Send the page of data.  This is slightly complicated
diff -Naur -X /jg/lib/dontdiff hylafax-4.1beta3/faxd/Class2Send.c++ hylafax-4.1beta3.fixed/faxd/Class2Send.c++
--- hylafax-4.1beta3/faxd/Class2Send.c++	Fri Sep  8 14:43:51 2000
+++ hylafax-4.1beta3.fixed/faxd/Class2Send.c++	Mon Jul  9 18:39:29 2001
@@ -401,7 +401,11 @@
         /*
          * correct broken Phase C (T.4) data if necessary
          */
-        correctPhaseCData(dp, &totdata, fillorder, params);
+	{
+	u_long jg = totdata;
+        correctPhaseCData(dp, &jg, fillorder, params);
+	totdata = jg;
+	}
 
 	beginTimedTransfer();
 	rc = putModemDLEData(dp, (u_int) totdata, bitrev, getDataTimeout());
diff -Naur -X /jg/lib/dontdiff hylafax-4.1beta3/faxd/PCFFont.c++ hylafax-4.1beta3.fixed/faxd/PCFFont.c++
--- hylafax-4.1beta3/faxd/PCFFont.c++	Wed Mar 29 05:09:38 2000
+++ hylafax-4.1beta3.fixed/faxd/PCFFont.c++	Mon Jul  9 18:40:04 2001
@@ -233,7 +233,7 @@
 	}
 	for (i = 0; i < nbitmaps; i++) {
 	    metrics[i].bits = bitmaps + offsets[i];
-	    if ((unsigned) metrics[i].bits & 1) {
+	    if ((unsigned long) metrics[i].bits & 1) {
 		error("Internal error, bitmap data not word-aligned");
 		delete offsets;
 		return (false);
diff -Naur -X /jg/lib/dontdiff hylafax-4.1beta3/util/FaxClient.c++ hylafax-4.1beta3.fixed/util/FaxClient.c++
--- hylafax-4.1beta3/util/FaxClient.c++	Mon Dec  4 03:14:53 2000
+++ hylafax-4.1beta3.fixed/util/FaxClient.c++	Mon Jul  9 18:36:07 2001
@@ -1271,12 +1271,12 @@
 FaxClient::recvData(bool (*f)(void*, const char*, int, fxStr&),
     void* arg, fxStr& emsg, u_long restart, const char* fmt, ...)
 {
-    if (!setMode(MODE_S))
-	goto bad;
-    if (!initDataConn(emsg))
-	goto bad;
-    if (restart && command("REST %lu", restart) != CONTINUE)
-	goto bad;
+    if ((!setMode(MODE_S)) ||
+       (!initDataConn(emsg)) ||
+       (restart && command("REST %lu", restart) != CONTINUE)) {
+    closeDataConn();
+    return (false);
+}
     va_list ap;
     va_start(ap, fmt);
     int r; r = vcommand(fmt, ap);
@@ -1326,12 +1326,21 @@
     zstream.opaque = NULL;
     zstream.data_type = Z_BINARY;
     if (inflateInit(&zstream) == Z_OK) {
-	if (!setMode(MODE_Z))
-	    goto bad;
-	if (!initDataConn(emsg))
-	    goto bad;
-	if (restart && command("REST %lu", restart) != CONTINUE)
-	    goto bad;
+	if (!setMode(MODE_Z)) {
+	closeDataConn();
+	inflateEnd(&zstream);
+    return (false);
+}
+	if (!initDataConn(emsg)) {
+	closeDataConn();
+	inflateEnd(&zstream);
+    return (false);
+}
+	if (restart && command("REST %lu", restart) != CONTINUE) {
+	closeDataConn();
+	inflateEnd(&zstream);
+    return (false);
+}
 	va_list ap;
 	va_start(ap, fmt);
 	int r; r = vcommand(fmt, ap);		// XXX for __GNUC__
